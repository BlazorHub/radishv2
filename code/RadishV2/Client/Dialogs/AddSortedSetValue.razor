@inject Radzen.DialogService dialogService

<RadzenCard Style="margin-bottom: 20px;">
    <RadzenTemplateForm TItem="KeyListItem" Data=@newItem Submit=@OnSubmit>
        <div class="container">
            <div class="row">
                <div class="col-sm-4">
                    Key Name
                </div>
                <div class="col-sm-8">
                    <RadzenTextBox Name="KeyName" Placeholder="String Value" @bind-Value="@newItem.KeyName" Style="margin-bottom: 20px" />
                    <RadzenRequiredValidator Component="KeyName" Text="Key name is required" Popup=true Style="position: absolute" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    Value
                </div>
                <div class="col-sm-8">
                    <RadzenTextBox Placeholder="Value" @bind-Value="@valValue" Style="margin-bottom: 20px" @oninput=@(args => OnTextChange()) />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    Score
                </div>
                <div class="col-sm-8">
                    <RadzenNumeric TValue="double" @bind-Value="@valScore" Placeholder="0.0" Step="0.1" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm">
                    <RadzenButton Click="@((args) => AddValue())" Disabled="@(valValue.Length <= 0)" ButtonStyle="ButtonStyle.Secondary" Text="Add" Style="margin-bottom: 10px; width: 150px" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm">
                    <RadzenListBox AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                   @bind-Value=@value Data=@newItem.KeyValues TextProperty="Name" ValueProperty="Value"
                                   Style="height: 200px;width: 400px;margin-left: 5px;margin-bottom: 5px;">
                        <Template Context="listContext">
                            <div class="text-nowrap">
                                <RadzenButton ButtonStyle="ButtonStyle.Danger" Click="@((args) => DeleteValue((listContext as KeyValue)))" Icon="delete"></RadzenButton>
                                @((listContext as KeyValue).Value) - @((listContext as KeyValue).Score.ToString())
                            </div>
                        </Template>
                    </RadzenListBox>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <RadzenButton ButtonType="ButtonType.Submit" Text="OK" Style="margin-bottom: 10px; width: 150px" />
                    <RadzenButton Click="@((args) => dialogService.Close(false))" ButtonStyle="ButtonStyle.Danger" Text="Cancel" Style="margin-bottom: 10px; width: 150px" />
                </div>
            </div>
        </div>
    </RadzenTemplateForm>
</RadzenCard>

@code {

    KeyListItem newItem = new KeyListItem();
    string value = "";

    string valValue = string.Empty;
    double valScore = 0.0;

    protected override async Task OnInitializedAsync()
    {
    }

    void OnTextChange()
    {
        StateHasChanged();
    }

    void AddValue()
    {
        KeyValue val = new KeyValue(valValue, valScore);
        newItem.KeyValues.Add(val);
        valValue = string.Empty;
        valScore = 0.0;

        newItem.KeyValues = newItem.KeyValues.OrderBy(x => x.Score).ToList();

        StateHasChanged();
    }

    void DeleteValue(KeyValue val)
    {
        newItem.KeyValues.Remove(val);

        StateHasChanged();
    }

    void OnSubmit(KeyListItem newItem)
    {
        dialogService.Close(newItem);
    }
}