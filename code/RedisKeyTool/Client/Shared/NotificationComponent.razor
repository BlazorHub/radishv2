@using RedisKeyTool.Client.Dialogs

@inject NotificationService notificationService
@inject Radzen.DialogService dialogService
@inject LoadingService loadingService

@code {
    protected override Task OnInitializedAsync()
    {
        StateHasChanged();

        return Task.CompletedTask;
    }

    public void ShowNotification(string value)
    {
        NotificationMessage message = new NotificationMessage();
        message.Severity = NotificationSeverity.Info;
        message.Summary = value;
        message.Duration = 5000;

        notificationService.Notify(message);

        StateHasChanged();
    }

    public void ShowErrorNotification(string value)
    {
        NotificationMessage message = new NotificationMessage();
        message.Severity = NotificationSeverity.Error;
        message.Summary = value;
        message.Duration = 10000;

        notificationService.Notify(message);

        StateHasChanged();
    }

    public async Task ShowExpiration()
    {
        DialogOptions options = new DialogOptions();
        options.ShowClose = true;

        dynamic value = await dialogService.OpenAsync<AboutExpiration>("About Expiration", null, options);
    }
}